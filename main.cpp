#include<iostream>
#include<map>
#include<iomanip>
#include<vector>
#include<cmath>
#include "./Cipher/Caeser_Cipher.h"

using namespace std;

void Caeser_CipherExample(){

	int key = 28;
	string sample_text = "SampleText";
	cout<<"Plaintext:  "<<sample_text<<endl;
	string encrypted_text = Caeser_Cipher::encrypt(key, sample_text);
	cout<<"Ciphertext: "<<encrypted_text<<endl;
	string decrypted_text = Caeser_Cipher::decrypt(key, encrypted_text);
	cout<<"Plaintext: "<<decrypted_text<<endl;
}


int main(){
	Caeser_CipherExample();

}

	/*
	string keyword = "newark";


	cout<< (int) pow(3, 10) %  9743 << endl;


    string t = string("ODNBGPADHOSIDALBGFNVMKXUKGTGDXSXHUUKDSSIDAKOLBHOZADSOTOHOSTAIFQSHPOIHKDBGAFOOVCABTHPTPIFRBOAIXDXOCMTXOIDZIDHTHKOXGHDISIFQSHPHKPTOAVUAOKOLIKASMDAOTOHKRFKTPIETHTQPGGKHOHKQODQIFAOKGATTQIUOPIFPSAPISIFXGKMIPPWSIGQXOLMDVOCDMOYQFOKSMHUIZUGXNTGOLGQKNINKHTPQFIVDHMHDNOCOAOTSXHOKASBKAOSQBATIDDQIERHPGDAOXAOKOAGNVKFOCWPIUTHSIXTHKZAPGBAFOMQFUFAIUOCAGNVKQTMTQGPTNGESTATIVNVNVKFROIUXCPHSPLBGEWRZGOFFGSIDASIIKOMDQIEMHUGIXUFATGFWTHTGFWTOAPHQLOXKGKFXCPXMSIUTNOHMHXKXPAOGEIZPISWTMWBIEHNTUTWQFEKXSHUIZIZFGILSPTPNDKOUFSPPGPSIUAOOSTDYAXOZHHOFUGPBZWTNEKATMILWPOXAOKOVOOFGFVOIUZISTIETKHVGQXOLOHPTXOCAFIMSGXTKGRAOAISIXPAOCGPTPXOIOMHXOCTZUTKSPLISIKUIKQKIPIFNRFKUFRXIEHNHTHPPHOSOD OQLAHDATQBODNBKOAFSHIZSIDADLVXFOOVIWHOHEUFSIDAPXSUTKSPATKFDIGPXNETHOSIHPHZTGAODXOYVDTHSXXZIXTQGTOAKOLBTUSPXOITLCKASTUGIVZHKASBKNNKOCEGGEZXOQEFTPIFBDKOZHSMSIXOMETIKOQFOWPITGVOSIHOHRWUKVHPIXUFXNPWOLHKATIVOSXTAOYNFUFKTPUAHPIXUFTGPHOKWPWDFOOADQKTVDIXQHVOKFMHLAGPONHKATIVNVMLHOCTHTIVZHZCCQGPOTXPZXSPDOMNHKATGESHKNIPIFKGXOTNGFCHIXMH IUPGGQKDHKHOSIHZWPPGOSTNIQTWZISIGUOAIFPGYOIUUFTNGEOCXPPSODKFOSGPQSHTFKEFKOFUGPCQOIFGWTKGSTGEOCOKOWPMIPQHMTSIFESQTMZAZHSIHPUWHOHRLIOWLCZFWTTHOSINXPXOCTLIIVOGOFHPWTFHKOGKMTFEKRMTADOSXINTATEVKHKRMKZFZDOAEDHKQHXDIPIFMWGOQS MDKFNKGFAHTPHKZHXOIDKHPVVOQFMWIUSOWKZGSPTOMVOAFNOAQOGPIPWPOKOMDVILKMHTINQPGOHTSDXOZILCSIIZWTMPIUOFAOHPLISIGKK NHKQDIPKATBHTPSHPXHKNHPGQKNOKIVFOWPIKHQWZTPXOZHUGWTHPPSHDPKMCCLKTOVEWIKLQNDXPPTDNKRWTIZAGSISIKUGPFORXIEHNKAQ GMTFGDAIFSTDNLSZKPGZCHZUVPHSIFZZGOFFUIZXOBAGPHKTAVITWOIUGIXUFTPFOMNXZISMDIPIXOLEVQLMTOXPAPGTPFOMKHVGFSTIFWGKAOS DVOCEXOWKHHVILSPXNUWGKVKAOQKEFIOPQKFOSDFTXATWPITMTTPKUZWADHFKHTMXPXPIKGEQOXOEWHTIFTHOSIFUFQBTHHIATIQIFPXSUQKZ QTGOWTGQFSIHTHTZGDXXPGPVKGPTNIQIFHUHNXOHFLIOWOLHOCTIMTIXNUWFGDOKFIAGSKAHISIFETMXMTPWZDMSMKHXCTXOCSIFETMXMHOD NKRIPHKZHIXUFDIOGSAPIIAIFGTIVFOWPIUOCIXUFWDIODXPIZTTWDSHDHPLISIKZSXBSZUVKKARNKOFZHNXOHFSTTPXOIOOCHDPIIOOSIFDNWPATE QWZOFDNTEOHKOPGHZPIZCDQIFIFWTPTXOBOHOCTLIKGOSPWIPIFCFUWIPTGIZZWSASIFEPGHVILSPXNUWGZHUHKDXTPHOSIKUDAPISMLIXOKARA MTOSTWIOAOKOIVZHZCFLDOKVPGLIBSIZOASIFZIXUFQSKTNTIZKOQFSIFKHKIOMHLINKPGNKKHCQPSETUKITIQIFKVPGLIQSLIOACBXGHDISTOOCXZI KWPUKKTKFATILNVMKARIFGTIVNQFKIUZISTIEQPIFCFUWGPHPMTPIIAKICNMTADAOKOTQKFDIHOIRIUQGVKQFILSWPGTPMTIZDNLHOIHKZHSIFZLO MAKOQFSIGPVKHPLIWIHKGPDAOTOKHQFKHQHUKPGPTPIFCFUWHKLAHTOTOXOCXGHKSIGPFEXSLAHTOTOSIFUKKTKFUKTGXNSIGKKOFZHNXOHFS TIXUFLQIZGQKNSIFESGEHNXIUPTHOSIIPGKQKIKILWPDHAFOFDUAOKOUGOWCLMAPGTPMTIPIXSAPIKRKFATSIIUSHEFOSPSAPNXSIGKIUPXPGLISIGPH PATTWAOKOOFHPHOSIHUHUPIOSATXGHDGXIUSUQKCQNDODQYVOZKRNMTHKMDKFSIXOKGPGNKKHADQBQSLIOAIXSUTEKHXCQNEFXSTAHOSIGK GPKUNTPHXCTHKOLINKKHDFQOEFTHOSIFLDLIXDIEFUGKHKAOOSIFSITGNVMKHYPGDAFAHUFGILSPSIIKDVOCNKTWNQAOKWOVAOKOLIAMPMOK MKMHGPKWTPZGILWMTAPIOHOSIFOWZDIXPHLIFUXOHPZHOSQSLIOATPIFPHIDPMIDCQAGNVMYGUMTSIVOOQIFBDNTPATHIQIFDQIUHNXPSIDAKASPPWIZHPAOLCHTOKSAATZGOGOHTPGPIZXKATZWSAATOGOHTPGPATKASTFKUFTXOCATKAQGFKM");



    map<char, int> countermap;
    string alpha = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
    for(int i=0; i<alpha.size(); i++){
    	countermap[alpha[i]] = 0;
    }

    for(int i=0; i < t.size(); i++){
    	countermap[t[i]]++;
    }

    for(auto item : countermap){
    	cout<<item.first<<" "<<item.second<<endl;
    }

    string Line22 = "OGKMTFEKRMTADOSXINTATEVKHKRMKZFZDOAEDHKQHXDIPIFMWGOQS";
    cout<<Line22.size()<<endl;

}*/	